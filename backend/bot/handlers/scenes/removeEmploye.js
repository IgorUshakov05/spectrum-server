const { Scenes, Markup } = require("telegraf");
const {
  get_all_users,
  delete_user_by_id,
} = require("../../../database/Request/User");

const mainMenuKeyboard = Markup.keyboard([
  ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞"],
  ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞"],
  ["‚ûñ –£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"],
])
  .resize()
  .oneTime();

const removeEmployeeWizard = new Scenes.WizardScene(
  "remove-employee-wizard",

  // –®–∞–≥ 1: –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–¥–∞–ª–µ–Ω–∏—è
  async (ctx) => {
    if (ctx.from.username !== process.env.DIRECTOR) {
      await ctx.reply(
        "üö´ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è. –ù–∞–∂–º–∏—Ç–µ /start"
      );
      return ctx.scene.leave();
    }
    const users = await get_all_users();

    if (!users.length) {
      await ctx.reply("üì≠ –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø—É—Å—Ç.", mainMenuKeyboard);
      return ctx.scene.leave();
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è message_id
    ctx.scene.session.employeeMessages = [];

    for (const user of users) {
      const text = `üë§ <b>${user.fullname}</b>\nüõ° –†–æ–ª—å: <i>${user.role}</i>`;
      const message = await ctx.reply(text, {
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "üóë –£–¥–∞–ª–∏—Ç—å",
                callback_data: `delete_user_${user.id}`,
              },
            ],
          ],
        },
        parse_mode: "HTML",
      });

      ctx.scene.session.employeeMessages.push(message.message_id);
    }
  }
);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å"
removeEmployeeWizard.action(/delete_user_(.+)/, async (ctx) => {
  const userId = ctx.match[1];
  await ctx.answerCbQuery();
  try {
    const result = await delete_user_by_id(userId);

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    if (ctx.scene.session.employeeMessages) {
      for (const msgId of ctx.scene.session.employeeMessages) {
        try {
          await ctx.deleteMessage(msgId);
        } catch (err) {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ
        }
      }
    }

    if (result.success) {
      await ctx.answerCbQuery("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω", { show_alert: false });
      await ctx.reply("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.", mainMenuKeyboard);
    } else {
      await ctx.answerCbQuery(`‚ùå –û—à–∏–±–∫–∞: ${result.message}`, {
        show_alert: true,
      });
    }
  } catch (e) {
    await ctx.answerCbQuery(`‚ùå –û—à–∏–±–∫–∞: ${e.message}`, { show_alert: true });
  }

  return ctx.scene.leave();
});

module.exports = removeEmployeeWizard;
